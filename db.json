{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0}],"Cache":[{"_id":"source/_posts/2013-12-17-EJS模版引擎（一）——什么是EJS.md","shasum":"87d8515cd8d5a2decc81161d191426440f477d09","modified":1450345135966},{"_id":"source/_posts/2014-2-17-使用-applyAsync，提升应用性能.md","shasum":"1991e6f0e5adcceae442560f9513c6e46a188eef","modified":1450345707219},{"_id":"source/_posts/2015-12-17-Angular中的表达式.md","shasum":"5a358ec68cb20f691fcc79556d480e697906d2a8","modified":1450346537229},{"_id":"themes/landscape/Gruntfile.js","shasum":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1450248182220},{"_id":"themes/landscape/LICENSE","shasum":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1450248182220},{"_id":"themes/landscape/README.md","shasum":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1450248182220},{"_id":"themes/landscape/_config.yml","shasum":"120d0252011a93aea58af39757b66668c123d99e","modified":1450344363785},{"_id":"themes/landscape/favicon.jpg","shasum":"115077574019758f7cfcb7d5ebc846dac1db80fa","modified":1450344121122},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","shasum":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1450337791187},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","shasum":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1450248182233},{"_id":"themes/landscape/layout/_partial/archive.ejs","shasum":"d7de6421497ffaf65e4f5fe4bed71fcea51fde80","modified":1450248182233},{"_id":"themes/landscape/layout/_partial/article.ejs","shasum":"01201725258ad2aaee606cd4dfdebc21b646def1","modified":1450248182233},{"_id":"themes/landscape/layout/_partial/footer.ejs","shasum":"f91ed349b2d70c5cc9e360636b86ab3e65e4419a","modified":1450344478938},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1450248182233},{"_id":"themes/landscape/layout/_partial/head.ejs","shasum":"888420ee763dd63cc7829fa7d8de761277c6bde6","modified":1450339065832},{"_id":"themes/landscape/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1450248182233},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","shasum":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1450248182233},{"_id":"themes/landscape/layout/_partial/post/category.ejs","shasum":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1450248182246},{"_id":"themes/landscape/layout/_partial/post/date.ejs","shasum":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1450248182246},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","shasum":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1450248182246},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","shasum":"f26d30355ba9144c51e700e8edc6a4ab6144ff9a","modified":1450248182246},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","shasum":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1450248182246},{"_id":"themes/landscape/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1450248182246},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","shasum":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1450322803675},{"_id":"themes/landscape/layout/_widget/archive.ejs","shasum":"985fbeb01142b9d526cda8ebc372c1d361d69a6b","modified":1450248182233},{"_id":"themes/landscape/layout/_widget/category.ejs","shasum":"36ab37878129d152e3cbdeb839c08e52af1acd58","modified":1450248182234},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","shasum":"feba7c00fa59ba13bf870b358a499fde4473d335","modified":1450248182233},{"_id":"themes/landscape/layout/_widget/tag.ejs","shasum":"b3f321ddda6be2702a286d5b11af9533509506fb","modified":1450248182233},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","shasum":"34dc8cdd96cdb41dd11cb7513f13714373e5104a","modified":1450248182234},{"_id":"themes/landscape/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1450248182234},{"_id":"themes/landscape/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1450248182234},{"_id":"themes/landscape/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1450248182234},{"_id":"themes/landscape/layout/layout.ejs","shasum":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1450248182234},{"_id":"themes/landscape/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1450248182234},{"_id":"themes/landscape/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1450248182234},{"_id":"themes/landscape/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1450248182234},{"_id":"themes/landscape/package.json","shasum":"85358dc34311c6662e841584e206a4679183943f","modified":1450248182221},{"_id":"themes/landscape/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1450248182234},{"_id":"themes/landscape/source/css/_extend.styl","shasum":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1450248182234},{"_id":"themes/landscape/source/css/_partial/archive.styl","shasum":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1450248182246},{"_id":"themes/landscape/source/css/_partial/article.styl","shasum":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1450248182247},{"_id":"themes/landscape/source/css/_partial/comment.styl","shasum":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1450248182246},{"_id":"themes/landscape/source/css/_partial/footer.styl","shasum":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1450248182246},{"_id":"themes/landscape/source/css/_partial/header.styl","shasum":"5b84ee88ebaeda64dd39c47b139b42f3e5656959","modified":1450344992465},{"_id":"themes/landscape/source/css/_partial/highlight.styl","shasum":"36eefe6332b86b66023a9884b754d305235846b4","modified":1450248182247},{"_id":"themes/landscape/source/css/_partial/mobile.styl","shasum":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1450248182247},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","shasum":"890349df5145abf46ce7712010c89237900b3713","modified":1450248182247},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","shasum":"bc5487b9a0bfe5f745423331824d3f3637ccd430","modified":1450248182247},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","shasum":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1450248182247},{"_id":"themes/landscape/source/css/_util/grid.styl","shasum":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1450248182247},{"_id":"themes/landscape/source/css/_util/mixin.styl","shasum":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1450248182247},{"_id":"themes/landscape/source/css/_variables.styl","shasum":"e8130f78438805214dcfd0a779ade479ce3cea17","modified":1450344748391},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1450248182247},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1450248182248},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1450248182248},{"_id":"themes/landscape/source/css/style.styl","shasum":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1450248182235},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1450248182248},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1450248182248},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1450248182248},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1450248182248},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1450248182248},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1450248182248},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1450248182244},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1450248182244},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1450248182244},{"_id":"themes/landscape/source/js/script.js","shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1450248182244},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1450248182248},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1450248182249},{"_id":"public/js/script.js","modified":1450346099918,"shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1450346099921,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1450346099925,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1450346099927,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1450346099930,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1450346099932,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1450346099934,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1450346099935,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1450346099937,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1450346099941,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1450346099944,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1450346099946,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1450346099947,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1450346099950,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1450346099951,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1450346099953,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1450346100689,"shasum":"660982d07c658f6c6b35ea238345aba6ebec8108"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1450346100878,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1450346100882,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1450346100886,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1450346100888,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/css/fonts/FontAwesome.otf","modified":1450346100889,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/2015/12/17/Angular中的表达式/index.html","modified":1450346541296,"shasum":"ec231240a6b108b919cc045119681831a913dd97"},{"_id":"public/2014/02/17/2014-2-17-使用-applyAsync，提升应用性能/index.html","modified":1450346100952,"shasum":"2c5066d4fe8e5fae0fdb3ebf509616f40dbc68d5"},{"_id":"public/2013/12/17/EJS模版引擎（一）——什么是EJS/index.html","modified":1450346100961,"shasum":"c543df7d47bc6aa746e900d2292b8420585076e2"},{"_id":"public/categories/EJS/index.html","modified":1450346100968,"shasum":"7dbab165578e11128ae8d8d64793bed9c096a133"},{"_id":"public/categories/angular/index.html","modified":1450346100975,"shasum":"18d0d0070d6a043f101ceaaa385725a3b6a94984"},{"_id":"public/archives/index.html","modified":1450346100983,"shasum":"5687ea12e3e27c705177d0d2e077e1757d6e4219"},{"_id":"public/archives/2013/index.html","modified":1450346100990,"shasum":"37b19bdc9e2089851f08bbd2f42b97447bc63229"},{"_id":"public/archives/2013/12/index.html","modified":1450346100996,"shasum":"bb786f578284b13df3f710885af89ebae8d5b4bc"},{"_id":"public/archives/2014/index.html","modified":1450346101002,"shasum":"3d784f213bd6a20c3ac282d6b9e9feb43faa3efa"},{"_id":"public/archives/2014/02/index.html","modified":1450346101007,"shasum":"8af5cf062f5d70960f3e6fe931a64f581d834a34"},{"_id":"public/archives/2015/index.html","modified":1450346101019,"shasum":"a50371c63d7b1e737d887cc4af1db3431b763a27"},{"_id":"public/archives/2015/12/index.html","modified":1450346101028,"shasum":"bdd46ae0d074db5390a08e53e4535b33c380a841"},{"_id":"public/atom.xml","modified":1450346541397,"shasum":"94f9fc4b8c5a5b0ab22f67278b2144a3d9f3b612"},{"_id":"public/index.html","modified":1450346517075,"shasum":"2d174ba7e4006abd3011ab8b362961bca26ec7dc"},{"_id":"public/sitemap.xml","modified":1450346541478,"shasum":"cf608597b37cd209bfeae6b5da19208388b3f779"},{"_id":"public/tags/EJS/index.html","modified":1450346101051,"shasum":"2b10e963466f2a0fc654e2f9b0590c3614e737c2"},{"_id":"public/tags/模版引擎/index.html","modified":1450346101056,"shasum":"a38f04e2d220bee8883680eb2a490dda43eb9074"},{"_id":"public/tags/angular/index.html","modified":1450346101063,"shasum":"68d5e4cac20a079975ba3a93350a1e4778c6f9a5"},{"_id":"public/tags/web/index.html","modified":1450346101069,"shasum":"7821a86adad3ece40b3d0d9ad402af846cac2520"},{"_id":"public/tags/前端开发/index.html","modified":1450346101076,"shasum":"0bdf9538dc32fc6c8fb39910cff9a16fcdf57e97"},{"_id":"public/tags/JavaScript/index.html","modified":1450346101082,"shasum":"76a9a6791e4f5f2f3360807f3d471696ef9bf82d"},{"_id":"public/tags/框架/index.html","modified":1450346101089,"shasum":"1696f81974b5cd49e333ac1fb26beda87451308d"},{"_id":"public/tags/MVVM/index.html","modified":1450346101096,"shasum":"434730b825f0e1ebcb17bd7657ade1f8aba3387d"},{"_id":"public/tags/性能/index.html","modified":1450346101101,"shasum":"1343ca0df2e448728cb8938365bebd87e2381ed7"}],"Category":[{"name":"EJS","_id":"ciia2mcgx0001fonsq2l5pg2o"},{"name":"angular","_id":"ciia2mcha0008fons1w0g496t"}],"Data":[],"Page":[],"Post":[{"title":"EJS模版引擎（一）—— 什么是EJS","date":"2013-12-17T04:20:50.000Z","_content":"\n## 什么是EJS？\n\n\"E\"代表\"effective\"，高效的意思。EJS是一个简单的模版语言，允许你通过原生JavaScript语言生成HTML标签。\n\n<!-- more --> \n\n使用EJS的优点：\n\n* 使用原生JavaScript。\n\n* 节省开发时间。\n\n* 简单的语法。\n\n* 提高执行效率。\n\n* 容易调试。\n\n* 活跃的社区。\n\nEJS的特性：\n\n* 快速编译并渲染\n\n* 简单的模版标签：`<% %>`\n\n* 自定义分隔符（例如：使用`<? ?>`代替`<% %>`）\n\n* include语法\n \n* 支持服务器端和浏览器端\n\n* 静态缓存JavaScript\n\n* 静态缓存模版\n\n* 可以与Express框架的view系统配合使用\n\n","source":"_posts/2013-12-17-EJS模版引擎（一）——什么是EJS.md","raw":"title: EJS模版引擎（一）—— 什么是EJS\ndate: 2013-12-17 12:20:50\ncategories:\n- EJS\ntags: \n- EJS \n- 模版引擎\n\n---\n\n## 什么是EJS？\n\n\"E\"代表\"effective\"，高效的意思。EJS是一个简单的模版语言，允许你通过原生JavaScript语言生成HTML标签。\n\n<!-- more --> \n\n使用EJS的优点：\n\n* 使用原生JavaScript。\n\n* 节省开发时间。\n\n* 简单的语法。\n\n* 提高执行效率。\n\n* 容易调试。\n\n* 活跃的社区。\n\nEJS的特性：\n\n* 快速编译并渲染\n\n* 简单的模版标签：`<% %>`\n\n* 自定义分隔符（例如：使用`<? ?>`代替`<% %>`）\n\n* include语法\n \n* 支持服务器端和浏览器端\n\n* 静态缓存JavaScript\n\n* 静态缓存模版\n\n* 可以与Express框架的view系统配合使用\n\n","slug":"EJS模版引擎（一）——什么是EJS","published":1,"updated":"2015-12-17T09:38:55.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciia2mcgs0000fonsvp29lu8m"},{"title":"Angular中的表达式","date":"2015-12-17T09:53:49.000Z","_content":"\nAngular中的表达式和JavaScript表达式类似，经常在\\{\\{ expression \\}\\}中使用。以下是Angular中合法的表达式：\n\n* 1+2\n* a+b\n* user.name\n* items[index]\n\n<!-- more -->\n\n#### Angular表达式 vs. JavaScript表达式\n\nAngular中的表达式又不完全和JavaScript表达式相同，有以下几点不同：\n\n* __上下文:__ JavaScript表达式执行的上下文是`window`，而Angular表达式执行的上下文是表达式所在的`scope`对象。\n\n* __容错:__在JavaScript中，如果一个表达式中的某个对象有未定义的属性，这个表达式会报错，如`ReferenceError `错误和`TypeError`错误。而Angular中，这种表达式最终会得出`undefined`和`null`值。因此在视图渲染时，不用担心某个对象中的属性不存在而导致报错。\n\n* __表达式中不能使用流程控制语句:__不能在Angular表达式中使用这些语句：条件判断，循环，抛出异常。\n\n* __表达式中不能使用函数声明:__不能在Angular表达式中使用函数声明，即使是在`ng-init`指令中。\n\n* __表达式中不能使用正则表达式:__不能在Angular表达式中使用正则表达式。\n\n* __表达式中不能有逗号或者void运算符:__不能在Angular表达式中使用`,`，或者`void`。\n\n* __可以在表达式中使用过滤器filter:__可以在Angular表达式中使用过滤器filter来格式化数据。\n\n如果你想执行复杂的JavaScript代码，你应该将这些代码放在控制器Controller中，然后在视图view上进行调用。如果你想`eval()`一个Angular表达式，使用`$eval()`方法。下面举一些例子：\n\n例一：\n```html\n<span>\n  1+2={{1+2}}\n</span>\n```\n结果：\n```\n1+2=3\n```\n\n例二：\n```html\n<div ng-controller=\"ExampleController\" class=\"expressions\">\n  Expression:<code>{{expr}}</code> => <span ng-bind=\"$parent.$eval(expr)\"></span>\n</div>\n```\n\n```js\nangular.module('expressionExample', [])\n.controller('ExampleController', ['$scope', function($scope) {\n  $scope.expr = '3*10|currency';\n}]);\n```\n结果:\n```\nExpression: 3*10|currency => $30.00\n```\n\n#### 上下文Context\n\nAngular没有使用JavaScript原生的`eval()`方法去对一个表达式求值。而是使用`$parse`服务处理表达式。\n\n由于Angular内部做了限制，所以Angular表达式也无法访问全局变量，如`window`,`document`或是`location`。防止意外发生。取而代之的，要访问前面这些变量，使用`$window`和`$location`，`$document`服务。\n\n```html\n<div class=\"example2\" ng-controller=\"ExampleController\">\n  Name: <input ng-model=\"name\" type=\"text\"/>\n  <button ng-click=\"greet()\">Greet</button>\n  <button ng-click=\"window.alert('Should not see me')\">Won't greet</button>\n</div>\n```\n```js\nangular.module('expressionExample', [])\n.controller('ExampleController', ['$window', '$scope', function($window, $scope) {\n  $scope.name = 'World';\n\n  $scope.greet = function() {\n    $window.alert('Hello ' + $scope.name);\n  };\n}]);\n```\n结果，只有使用`$window`的，才会弹出alert。\n\n#### 不能使用条件语句\n\n但是三目运算符可以使用(`a ? b : c`)，不能使用条件语句是因为Angular框架的理念和设计哲学，做了这个限制，你应该将应用逻辑放在控制器controller中，而不是视图view中。如果你要在表达式中使用条件语句，循环，或者抛出一个异常，请将这些语句放在一个函数中，然后调用它。\n\n#### 不能使用函数和正则表达式\n\n为了避免在视图中进行复杂的数据模型转换逻辑。这些逻辑应该放在控制器controller中或是过滤器filter中，这样也方便测试。\n\n\n#### 容错\n\n在JavaScript中，执行这样的表达式`a.b.c`，这时，如果`a`不是一个对象，那么会抛出一个异常。\n而在Angular中，在有值则在视图中显示，无值则不显示，并不需要抛出异常，所以对于之前的情况：\n```\n{{a.b.c}}\n```\n在Angular中不会抛出异常，表达式求值结果是undefined或者null，视图不显示而已。\n","source":"_posts/2015-12-17-Angular中的表达式.md","raw":"title: Angular中的表达式\ndate: 2015-12-17 17:53:49\ntags:\n- angular\n- web\n- 前端开发\n- JavaScript\n- 框架\n- MVVM\ncategories:\n- angular\n\n---\n\nAngular中的表达式和JavaScript表达式类似，经常在\\{\\{ expression \\}\\}中使用。以下是Angular中合法的表达式：\n\n* 1+2\n* a+b\n* user.name\n* items[index]\n\n<!-- more -->\n\n#### Angular表达式 vs. JavaScript表达式\n\nAngular中的表达式又不完全和JavaScript表达式相同，有以下几点不同：\n\n* __上下文:__ JavaScript表达式执行的上下文是`window`，而Angular表达式执行的上下文是表达式所在的`scope`对象。\n\n* __容错:__在JavaScript中，如果一个表达式中的某个对象有未定义的属性，这个表达式会报错，如`ReferenceError `错误和`TypeError`错误。而Angular中，这种表达式最终会得出`undefined`和`null`值。因此在视图渲染时，不用担心某个对象中的属性不存在而导致报错。\n\n* __表达式中不能使用流程控制语句:__不能在Angular表达式中使用这些语句：条件判断，循环，抛出异常。\n\n* __表达式中不能使用函数声明:__不能在Angular表达式中使用函数声明，即使是在`ng-init`指令中。\n\n* __表达式中不能使用正则表达式:__不能在Angular表达式中使用正则表达式。\n\n* __表达式中不能有逗号或者void运算符:__不能在Angular表达式中使用`,`，或者`void`。\n\n* __可以在表达式中使用过滤器filter:__可以在Angular表达式中使用过滤器filter来格式化数据。\n\n如果你想执行复杂的JavaScript代码，你应该将这些代码放在控制器Controller中，然后在视图view上进行调用。如果你想`eval()`一个Angular表达式，使用`$eval()`方法。下面举一些例子：\n\n例一：\n```html\n<span>\n  1+2={{1+2}}\n</span>\n```\n结果：\n```\n1+2=3\n```\n\n例二：\n```html\n<div ng-controller=\"ExampleController\" class=\"expressions\">\n  Expression:<code>{{expr}}</code> => <span ng-bind=\"$parent.$eval(expr)\"></span>\n</div>\n```\n\n```js\nangular.module('expressionExample', [])\n.controller('ExampleController', ['$scope', function($scope) {\n  $scope.expr = '3*10|currency';\n}]);\n```\n结果:\n```\nExpression: 3*10|currency => $30.00\n```\n\n#### 上下文Context\n\nAngular没有使用JavaScript原生的`eval()`方法去对一个表达式求值。而是使用`$parse`服务处理表达式。\n\n由于Angular内部做了限制，所以Angular表达式也无法访问全局变量，如`window`,`document`或是`location`。防止意外发生。取而代之的，要访问前面这些变量，使用`$window`和`$location`，`$document`服务。\n\n```html\n<div class=\"example2\" ng-controller=\"ExampleController\">\n  Name: <input ng-model=\"name\" type=\"text\"/>\n  <button ng-click=\"greet()\">Greet</button>\n  <button ng-click=\"window.alert('Should not see me')\">Won't greet</button>\n</div>\n```\n```js\nangular.module('expressionExample', [])\n.controller('ExampleController', ['$window', '$scope', function($window, $scope) {\n  $scope.name = 'World';\n\n  $scope.greet = function() {\n    $window.alert('Hello ' + $scope.name);\n  };\n}]);\n```\n结果，只有使用`$window`的，才会弹出alert。\n\n#### 不能使用条件语句\n\n但是三目运算符可以使用(`a ? b : c`)，不能使用条件语句是因为Angular框架的理念和设计哲学，做了这个限制，你应该将应用逻辑放在控制器controller中，而不是视图view中。如果你要在表达式中使用条件语句，循环，或者抛出一个异常，请将这些语句放在一个函数中，然后调用它。\n\n#### 不能使用函数和正则表达式\n\n为了避免在视图中进行复杂的数据模型转换逻辑。这些逻辑应该放在控制器controller中或是过滤器filter中，这样也方便测试。\n\n\n#### 容错\n\n在JavaScript中，执行这样的表达式`a.b.c`，这时，如果`a`不是一个对象，那么会抛出一个异常。\n而在Angular中，在有值则在视图中显示，无值则不显示，并不需要抛出异常，所以对于之前的情况：\n```\n{{a.b.c}}\n```\n在Angular中不会抛出异常，表达式求值结果是undefined或者null，视图不显示而已。\n","slug":"Angular中的表达式","published":1,"updated":"2015-12-17T10:02:17.229Z","_id":"ciia2mch90007fonsxenivdby","comments":1,"layout":"post","photos":[],"link":""},{"title":"使用$applyAsync，提升应用性能","date":"2014-02-17T09:44:47.000Z","_content":"\n\n通过调用Angular 1.3增加的一个新的API——`$applyAsync`，可以使多个`$http`请求，达到在一个`$digest`循环中几乎同一时刻响应的目的。下面来具体解释下。\n\n<!-- more -->\n\n## 为什么、什么时候我们需要`$digest`循环\n\n我们知道，数据和视图的双向绑定是Angular的一大特点。当js中数据变化时，我们可以看到html视图几乎是同时刷新，我们并没有设置一些监听事件或是做了其他操作来实现这一功能。\n\n为了达到数据视图双向绑定的目的，Angular使用了事件循环（`$digest`循环）来更新我们的数据和视图。\n\nAngular是怎么知道何时去触发`$digest`循环的呢？这里不过多讨论这个细节。但是需要说明的是，一些人认为，Angular通过毫秒级的检查数据，来判断数据是否变化，并去更新视图。__这是不正确的！__\n\n首先说明数据可能发生变化，并且触发`$digest`循环的情况，基本上有以下3种情况：\n\n* __用户通过事件与页面进行交互__ - 用户点击按钮，使我们应用程序的状态发生了改变。\n\n* __XMLHttpRequests__ - 也被称为`AJAX`，我们的应用程序从服务器端请求回一些数据并更新了我们程序中的数据。\n\n* __定时器__ - 通过定时器`$timeout`,`$interval`进行异步操作可能更改程序中的数据。\n\n不论以上哪种情况发生，Angular这时会触发一次`$digest`循环。Angular会拦截到这些操作。怎么拦截？\n\n这就是为什么我们要写一些Angular中预定义好的指令的缘故，比如`ng-click`，Angular重写的`input`指令等等。Angular也会在`$http`服务发送的请求返回时，触发一次`$digest`循环。\n\n此外，这也解释了为什么当有其他Angular以外的代码（比如dom原生click事件，或是jquery提供的click事件）改变你应用程序的状态时，通过调用`$scope.$apply()`，可以立即触发一次`$digest`，从而更新视图。\n\n到此，我们对`$digest`循环有个大体的了解。\n\n## 在一次`$digest`循环中处理多个`$http`响应\n\n如`$applyAsync`的名字，它会异步执行`$scope.$apply`。这是什么意思？在什么场景下使用呢？\n例子：\n\n```js\napp.controller('Ctrl', function ($http) {\n  $http.get('fetch/some/json/').then(function (response) {\n    this.myModel = response.data;\n  }.bind(this));\n});\n```\n\n我们在controller中通过`$http`服务发送了一个请求，当请求resolve后，我们用请求回来的数据更新`myModel`。我们不需要进行DOM操作来更新视图。当请求resolve时，会触发一次`$digest`循环来更新视图。\n\n现在我们在应用的启动阶段要发送3个请求。每个请求响应的时刻不同，因此会触发3次`$digest`循环，\n会拖慢我们的应用。有没有办法我们可以收集这3个请求返回的promise，并且在下一次`$digest`循环中，将3个promise同时resolve？通过`$applyAsync`就可以实现。\n\n只需要在应用的配置阶段，调用`$httpProvider`的`useApplyAsync`即可。\n\n```js\napp.config(function ($httpProvider) {\n  $httpProvider.useApplyAsync(true);\n});\n```\n\n加了这段代码后，如果应用程序现在接受到多个`$http`响应，会发生以下3点：\n\n* 将请求的promise压入一个队列\n* 异步的`$apply`准备执行，告诉浏览器去执行`setTimeout()`\n* 当定时器执行完毕，清空promise队列，触发`$apply`\n\n定时器`setTimeout()`时间被设置为0，不过在浏览器中可能有10毫秒的延迟。意味着，如果3个异步请求在同一时间响应，它们将在一次`$digest`循环中全部resolve，从而加快我们的应用程序。\n","source":"_posts/2014-2-17-使用-applyAsync，提升应用性能.md","raw":"title: 使用$applyAsync，提升应用性能\ndate: 2014-2-17 17:44:47\ntags:\n- angular \n- 性能 \n- JavaScript\n- web\n- 前端开发\ncategories: \n- angular\n\n---\n\n\n通过调用Angular 1.3增加的一个新的API——`$applyAsync`，可以使多个`$http`请求，达到在一个`$digest`循环中几乎同一时刻响应的目的。下面来具体解释下。\n\n<!-- more -->\n\n## 为什么、什么时候我们需要`$digest`循环\n\n我们知道，数据和视图的双向绑定是Angular的一大特点。当js中数据变化时，我们可以看到html视图几乎是同时刷新，我们并没有设置一些监听事件或是做了其他操作来实现这一功能。\n\n为了达到数据视图双向绑定的目的，Angular使用了事件循环（`$digest`循环）来更新我们的数据和视图。\n\nAngular是怎么知道何时去触发`$digest`循环的呢？这里不过多讨论这个细节。但是需要说明的是，一些人认为，Angular通过毫秒级的检查数据，来判断数据是否变化，并去更新视图。__这是不正确的！__\n\n首先说明数据可能发生变化，并且触发`$digest`循环的情况，基本上有以下3种情况：\n\n* __用户通过事件与页面进行交互__ - 用户点击按钮，使我们应用程序的状态发生了改变。\n\n* __XMLHttpRequests__ - 也被称为`AJAX`，我们的应用程序从服务器端请求回一些数据并更新了我们程序中的数据。\n\n* __定时器__ - 通过定时器`$timeout`,`$interval`进行异步操作可能更改程序中的数据。\n\n不论以上哪种情况发生，Angular这时会触发一次`$digest`循环。Angular会拦截到这些操作。怎么拦截？\n\n这就是为什么我们要写一些Angular中预定义好的指令的缘故，比如`ng-click`，Angular重写的`input`指令等等。Angular也会在`$http`服务发送的请求返回时，触发一次`$digest`循环。\n\n此外，这也解释了为什么当有其他Angular以外的代码（比如dom原生click事件，或是jquery提供的click事件）改变你应用程序的状态时，通过调用`$scope.$apply()`，可以立即触发一次`$digest`，从而更新视图。\n\n到此，我们对`$digest`循环有个大体的了解。\n\n## 在一次`$digest`循环中处理多个`$http`响应\n\n如`$applyAsync`的名字，它会异步执行`$scope.$apply`。这是什么意思？在什么场景下使用呢？\n例子：\n\n```js\napp.controller('Ctrl', function ($http) {\n  $http.get('fetch/some/json/').then(function (response) {\n    this.myModel = response.data;\n  }.bind(this));\n});\n```\n\n我们在controller中通过`$http`服务发送了一个请求，当请求resolve后，我们用请求回来的数据更新`myModel`。我们不需要进行DOM操作来更新视图。当请求resolve时，会触发一次`$digest`循环来更新视图。\n\n现在我们在应用的启动阶段要发送3个请求。每个请求响应的时刻不同，因此会触发3次`$digest`循环，\n会拖慢我们的应用。有没有办法我们可以收集这3个请求返回的promise，并且在下一次`$digest`循环中，将3个promise同时resolve？通过`$applyAsync`就可以实现。\n\n只需要在应用的配置阶段，调用`$httpProvider`的`useApplyAsync`即可。\n\n```js\napp.config(function ($httpProvider) {\n  $httpProvider.useApplyAsync(true);\n});\n```\n\n加了这段代码后，如果应用程序现在接受到多个`$http`响应，会发生以下3点：\n\n* 将请求的promise压入一个队列\n* 异步的`$apply`准备执行，告诉浏览器去执行`setTimeout()`\n* 当定时器执行完毕，清空promise队列，触发`$apply`\n\n定时器`setTimeout()`时间被设置为0，不过在浏览器中可能有10毫秒的延迟。意味着，如果3个异步请求在同一时间响应，它们将在一次`$digest`循环中全部resolve，从而加快我们的应用程序。\n","slug":"2014-2-17-使用-applyAsync，提升应用性能","published":1,"updated":"2015-12-17T09:48:27.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciia2mchg000mfons4j0welvv"}],"PostAsset":[],"PostCategory":[{"post_id":"ciia2mcgs0000fonsvp29lu8m","category_id":"ciia2mcgx0001fonsq2l5pg2o","_id":"ciia2mch00004fons9y5o0n7o"},{"post_id":"ciia2mchg000mfons4j0welvv","category_id":"ciia2mcha0008fons1w0g496t","_id":"ciia2mchh000nfonsiokvwufb"},{"post_id":"ciia2mch90007fonsxenivdby","category_id":"ciia2mcha0008fons1w0g496t","_id":"ciia2vt0f0000pcns350smi9w"}],"PostTag":[{"post_id":"ciia2mcgs0000fonsvp29lu8m","tag_id":"ciia2mcgx0002fons5qdr03na","_id":"ciia2mch00005fons4y4bdddl"},{"post_id":"ciia2mcgs0000fonsvp29lu8m","tag_id":"ciia2mcgz0003fonscj0luveb","_id":"ciia2mch10006fons62fapo2j"},{"post_id":"ciia2mch90007fonsxenivdby","tag_id":"ciia2mcha0009fonss8bhmkv3","_id":"ciia2mche000gfonsrmugxlqu"},{"post_id":"ciia2mch90007fonsxenivdby","tag_id":"ciia2mchc000afonszsl8m68h","_id":"ciia2mche000hfonszfr4qt23"},{"post_id":"ciia2mch90007fonsxenivdby","tag_id":"ciia2mchc000cfonsa4jamq4c","_id":"ciia2mche000ifonsvmi2dito"},{"post_id":"ciia2mch90007fonsxenivdby","tag_id":"ciia2mchd000dfons0rh6gn7a","_id":"ciia2mche000jfons1v191e9k"},{"post_id":"ciia2mch90007fonsxenivdby","tag_id":"ciia2mchd000efonsd9rh8fqq","_id":"ciia2mche000kfonsi7k70rw7"},{"post_id":"ciia2mch90007fonsxenivdby","tag_id":"ciia2mchd000ffonsk3m4ibkv","_id":"ciia2mchf000lfonsa6c77ucr"},{"post_id":"ciia2mchg000mfons4j0welvv","tag_id":"ciia2mcha0009fonss8bhmkv3","_id":"ciia2mchi000pfons1l4lbhdd"},{"post_id":"ciia2mchg000mfons4j0welvv","tag_id":"ciia2mchi000ofonskwb99rpr","_id":"ciia2mchj000qfons9mehytx4"},{"post_id":"ciia2mchg000mfons4j0welvv","tag_id":"ciia2mchd000dfons0rh6gn7a","_id":"ciia2mchj000rfonsqjm1vhqq"},{"post_id":"ciia2mchg000mfons4j0welvv","tag_id":"ciia2mchc000afonszsl8m68h","_id":"ciia2mchj000sfons6dgrfqgq"},{"post_id":"ciia2mchg000mfons4j0welvv","tag_id":"ciia2mchc000cfonsa4jamq4c","_id":"ciia2mchk000tfonsoh0x04ak"}],"Tag":[{"name":"EJS","_id":"ciia2mcgx0002fons5qdr03na"},{"name":"模版引擎","_id":"ciia2mcgz0003fonscj0luveb"},{"name":"angular","_id":"ciia2mcha0009fonss8bhmkv3"},{"name":"web","_id":"ciia2mchc000afonszsl8m68h"},{"name":"前端开发","_id":"ciia2mchc000cfonsa4jamq4c"},{"name":"JavaScript","_id":"ciia2mchd000dfons0rh6gn7a"},{"name":"框架","_id":"ciia2mchd000efonsd9rh8fqq"},{"name":"MVVM","_id":"ciia2mchd000ffonsk3m4ibkv"},{"name":"性能","_id":"ciia2mchi000ofonskwb99rpr"}]}}